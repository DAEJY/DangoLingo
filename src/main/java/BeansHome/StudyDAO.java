// #################################################################################################
// StudyDAO.java - 학습 기록 DAO 모듈
// #################################################################################################
// ═════════════════════════════════════════════════════════════════════════════════════════
// 외부모듈 영역
// ═════════════════════════════════════════════════════════════════════════════════════════
package BeansHome;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import DAO.DBOracleMgr;
import BeansHome.StudyDTO;

// ═════════════════════════════════════════════════════════════════════════════════════════
// 사용자정의 클래스 영역
// ═════════════════════════════════════════════════════════════════════════════════════════
/***********************************************************************
 * StudyDAO    : 학습 기록 DAO 클래스<br>
 * Inheritance : None
 ***********************************************************************/
public class StudyDAO {
    // —————————————————————————————————————————————————————————————————————————————————————
    // 전역상수 관리 - 필수영역
    // —————————————————————————————————————————————————————————————————————————————————————
    private static final DBOracleMgr db = DBOracleMgr.getInstance();
    
    // —————————————————————————————————————————————————————————————————————————————————————
    // 전역변수 관리 - 필수영역(정적변수)
    // —————————————————————————————————————————————————————————————————————————————————————
    
    // —————————————————————————————————————————————————————————————————————————————————————
    // 전역변수 관리 - 필수영역(인스턴스변수)
    // —————————————————————————————————————————————————————————————————————————————————————
    
    // —————————————————————————————————————————————————————————————————————————————————————
    // 생성자 관리 - 필수영역(인스턴스함수)
    // —————————————————————————————————————————————————————————————————————————————————————
    /***********************************************************************
     * StudyDAO()   : 생성자
     * @param void  : None
     ***********************************************************************/
    public StudyDAO() {
        try {
            // -----------------------------------------------------------------------------
            // 초기화 작업 관리
            // -----------------------------------------------------------------------------
            
            // -----------------------------------------------------------------------------
        } catch (Exception Ex) {
            Common.ExceptionMgr.DisplayException(Ex);    // 예외처리(콘솔)
        }
    }
    
    // —————————————————————————————————————————————————————————————————————————————————————
    // 전역함수 관리 - 필수영역(정적함수)
    // —————————————————————————————————————————————————————————————————————————————————————
    
    // —————————————————————————————————————————————————————————————————————————————————————
    // 전역함수 관리 - 필수영역(인스턴스함수)
    // —————————————————————————————————————————————————————————————————————————————————————
    /***********************************************************************
     * addStudy()    : 학습 기록 추가
     * @param study  : 학습 기록 DTO 객체
     * @return boolean : 성공 여부
     ***********************************************************************/
    public boolean addStudy(StudyDTO study) {
        Connection conn = null;
        PreparedStatement pstmt = null;
        boolean success = false;
        
        try {
            // -----------------------------------------------------------------------------
            // 학습 기록 추가
            // -----------------------------------------------------------------------------
            conn = db.getConnection();
            pstmt = db.getPreparedStatement(conn, "STUDY.INSERT");
            pstmt.setInt(1, study.getUserId());
            pstmt.setDate(2, new java.sql.Date(study.getStudyDate().getTime()));
            pstmt.setInt(3, study.getStudyCount());
            pstmt.setInt(4, study.getStudyLevel());
            
            success = pstmt.executeUpdate() > 0;
            // -----------------------------------------------------------------------------
        } catch (Exception Ex) {
            Common.ExceptionMgr.DisplayException(Ex);    // 예외처리(콘솔)
        } finally {
            db.close(pstmt);
            db.close(conn);
        }
        
        return success;
    }

    // ... 나머지 메소드도 동일한 형식으로 구현 ...
}
// #################################################################################################
// <END>
// ################################################################################################# 